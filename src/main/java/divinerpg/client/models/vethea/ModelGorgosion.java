package divinerpg.client.models.vethea;

import com.google.common.collect.ImmutableList;

import net.minecraft.client.renderer.entity.model.SegmentedModel;
import net.minecraft.client.renderer.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.math.*;

public class ModelGorgosion<T extends Entity> extends SegmentedModel<T>
{
    //fields
    ModelRenderer rightarm1;
    ModelRenderer leftarm1;
    ModelRenderer rightleg1;
    ModelRenderer leftleg1;
    ModelRenderer body1;
    ModelRenderer body2;
    ModelRenderer body3;
    ModelRenderer body4;
    ModelRenderer body5;
    ModelRenderer body6;
    ModelRenderer body7;
    ModelRenderer body8;
    ModelRenderer rightleg2;
    ModelRenderer leftleg2;
    ModelRenderer leftleg3;
    ModelRenderer rightleg3;
    ModelRenderer rightleg4;
    ModelRenderer leftleg4;
    ModelRenderer rightleg5;
    ModelRenderer leftleg5;
    ModelRenderer leftleg6;
    ModelRenderer leftleg10;
    ModelRenderer rightleg10;
    ModelRenderer rightleg7;
    ModelRenderer rightleg8;
    ModelRenderer leftleg8;
    ModelRenderer rightleg9;
    ModelRenderer leftleg9;
    ModelRenderer rightarm2;
    ModelRenderer leftarm2;
    ModelRenderer rightarm3;
    ModelRenderer leftarm3;
    ModelRenderer rightarm4;
    ModelRenderer leftarm4;
    ModelRenderer rightarm5;
    ModelRenderer leftarm5;

    public ModelGorgosion()
    {
        texWidth = 64;
        texHeight = 32;

        rightarm1 = new ModelRenderer(this, 40, 20);
        rightarm1.addBox(-3F, -5F, -3F, 6, 6, 6);
        rightarm1.setPos(-8F, 2F, 0F);
        rightarm1.setTexSize(64, 32);
        rightarm1.mirror = true;
        setRotation(rightarm1, 0F, 0F, 0F);
        leftarm1 = new ModelRenderer(this, 40, 20);
        leftarm1.addBox(-3F, -5F, -3F, 6, 6, 6);
        leftarm1.setPos(8F, 2F, 0F);
        leftarm1.setTexSize(64, 32);
        leftarm1.mirror = true;
        setRotation(leftarm1, 0F, 0F, 0F);
        rightleg1 = new ModelRenderer(this, 0, 22);
        rightleg1.addBox(2F, -10F, -12F, 2, 8, 2);
        rightleg1.setPos(-10F, 12F, 0F);
        rightleg1.setTexSize(64, 32);
        rightleg1.mirror = true;
        setRotation(rightleg1, 1.570796F, 0F, 0F);
        leftleg1 = new ModelRenderer(this, 0, 22);
        leftleg1.addBox(2F, -10F, -12F, 2, 8, 2);
        leftleg1.setPos(10F, 12F, 0F);
        leftleg1.setTexSize(64, 32);
        leftleg1.mirror = true;
        setRotation(leftleg1, 1.570796F, 0F, 0F);
        body1 = new ModelRenderer(this, 0, 0);
        body1.addBox(-4F, 0F, -2F, 8, 8, 4);
        body1.setPos(-4F, -4F, -2F);
        body1.setTexSize(64, 32);
        body1.mirror = true;
        setRotation(body1, 0F, 0F, 0F);
        body2 = new ModelRenderer(this, 24, 0);
        body2.addBox(-4F, 0F, -2F, 8, 8, 4);
        body2.setPos(4F, -4F, 2F);
        body2.setTexSize(64, 32);
        body2.mirror = true;
        setRotation(body2, 0F, 0F, 0F);
        body3 = new ModelRenderer(this, 0, 0);
        body3.addBox(-4F, 0F, -2F, 8, 8, 4);
        body3.setPos(-4F, -4F, 2F);
        body3.setTexSize(64, 32);
        body3.mirror = true;
        setRotation(body3, 0F, 0F, 0F);
        body4 = new ModelRenderer(this, 24, 0);
        body4.addBox(-4F, 0F, -2F, 8, 8, 4);
        body4.setPos(4F, -4F, -2F);
        body4.setTexSize(64, 32);
        body4.mirror = true;
        setRotation(body4, 0F, 0F, 0F);
        body5 = new ModelRenderer(this, 24, 0);
        body5.addBox(-4F, 0F, -2F, 8, 8, 4);
        body5.setPos(4F, 4F, 2F);
        body5.setTexSize(64, 32);
        body5.mirror = true;
        setRotation(body5, 0F, 0F, 0F);
        body6 = new ModelRenderer(this, 0, 0);
        body6.addBox(-4F, 0F, -2F, 8, 8, 4);
        body6.setPos(-4F, 4F, 2F);
        body6.setTexSize(64, 32);
        body6.mirror = true;
        setRotation(body6, 0F, 0F, 0F);
        body7 = new ModelRenderer(this, 24, 0);
        body7.addBox(-4F, 0F, -2F, 8, 8, 4);
        body7.setPos(8F, 8F, -2F);
        body7.setTexSize(64, 32);
        body7.mirror = true;
        setRotation(body7, 0F, 0F, 1.570796F);
        body8 = new ModelRenderer(this, 0, 0);
        body8.addBox(-4F, 0F, -2F, 8, 8, 4);
        body8.setPos(-8F, 8F, -2F);
        body8.setTexSize(64, 32);
        body8.mirror = true;
        setRotation(body8, 0F, 0F, -1.570796F);
        rightleg2 = new ModelRenderer(this, 0, 12);
        rightleg2.addBox(-3F, -6F, -3F, 5, 4, 6);
        rightleg2.setPos(-10F, 12F, 0F);
        rightleg2.setTexSize(64, 32);
        rightleg2.mirror = true;
        setRotation(rightleg2, -0.3490659F, 0F, 0F);
        leftleg2 = new ModelRenderer(this, 0, 12);
        leftleg2.addBox(-2F, -6F, -3F, 5, 4, 6);
        leftleg2.setPos(10F, 12F, 0F);
        leftleg2.setTexSize(64, 32);
        leftleg2.mirror = true;
        setRotation(leftleg2, -0.3490659F, 0F, 0F);
        leftleg3 = new ModelRenderer(this, 50, 0);
        leftleg3.addBox(-1F, 2F, 1F, 2, 5, 2);
        leftleg3.setPos(10F, 12F, 0F);
        leftleg3.setTexSize(64, 32);
        leftleg3.mirror = true;
        setRotation(leftleg3, -1.22173F, 0F, 0F);
        rightleg3 = new ModelRenderer(this, 50, 0);
        rightleg3.addBox(-1F, 2F, 1F, 2, 5, 2);
        rightleg3.setPos(-10F, 12F, 0F);
        rightleg3.setTexSize(64, 32);
        rightleg3.mirror = true;
        setRotation(rightleg3, -1.22173F, 0F, 0F);
        rightleg4 = new ModelRenderer(this, 22, 12);
        rightleg4.addBox(-2F, -2F, -11F, 4, 9, 4);
        rightleg4.setPos(-10F, 12F, 0F);
        rightleg4.setTexSize(64, 32);
        rightleg4.mirror = true;
        setRotation(rightleg4, 1.22173F, 0F, 0F);
        leftleg4 = new ModelRenderer(this, 22, 12);
        leftleg4.addBox(-2F, -2F, -11F, 4, 9, 4);
        leftleg4.setPos(10F, 12F, 0F);
        leftleg4.setTexSize(64, 32);
        leftleg4.mirror = true;
        setRotation(leftleg4, 1.22173F, 0F, 0F);
        rightleg5 = new ModelRenderer(this, 8, 22);
        rightleg5.addBox(2F, -2F, -12F, 2, 7, 2);
        rightleg5.setPos(-10F, 12F, 0F);
        rightleg5.setTexSize(64, 32);
        rightleg5.mirror = true;
        setRotation(rightleg5, 1.570796F, 0F, 0F);
        leftleg5 = new ModelRenderer(this, 8, 22);
        leftleg5.addBox(2F, -2F, -12F, 2, 7, 2);
        leftleg5.setPos(10F, 12F, 0F);
        leftleg5.setTexSize(64, 32);
        leftleg5.mirror = true;
        setRotation(leftleg5, 1.570796F, 0F, 0F);
        leftleg6 = new ModelRenderer(this, 8, 22);
        leftleg6.addBox(-4F, -2F, -12F, 2, 7, 2);
        leftleg6.setPos(10F, 12F, 0F);
        leftleg6.setTexSize(64, 32);
        leftleg6.mirror = true;
        setRotation(leftleg6, 1.570796F, 0F, 0F);
        leftleg10 = new ModelRenderer(this, 0, 22);
        leftleg10.addBox(-4F, -10F, -12F, 2, 8, 2);
        leftleg10.setPos(10F, 12F, 0F);
        leftleg10.setTexSize(64, 32);
        leftleg10.mirror = true;
        setRotation(leftleg10, 1.570796F, 0F, 0F);
        rightleg10 = new ModelRenderer(this, 8, 22);
        rightleg10.addBox(-4F, -2F, -12F, 2, 7, 2);
        rightleg10.setPos(-10F, 12F, 0F);
        rightleg10.setTexSize(64, 32);
        rightleg10.mirror = true;
        setRotation(rightleg10, 1.570796F, 0F, 0F);
        rightleg7 = new ModelRenderer(this, 0, 22);
        rightleg7.addBox(-4F, -10F, -12F, 2, 8, 2);
        rightleg7.setPos(-10F, 12F, 0F);
        rightleg7.setTexSize(64, 32);
        rightleg7.mirror = true;
        setRotation(rightleg7, 1.570796F, 0F, 0F);
        rightleg8 = new ModelRenderer(this, 22, 12);
        rightleg8.addBox(-2F, -2F, -2F, 4, 9, 4);
        rightleg8.setPos(-10F, 12F, 0F);
        rightleg8.setTexSize(64, 32);
        rightleg8.mirror = true;
        setRotation(rightleg8, -0.3490659F, 0F, 0F);
        leftleg8 = new ModelRenderer(this, 22, 12);
        leftleg8.addBox(-2F, -2F, -2F, 4, 9, 4);
        leftleg8.setPos(10F, 12F, 0F);
        leftleg8.setTexSize(64, 32);
        leftleg8.mirror = true;
        setRotation(leftleg8, -0.3490659F, 0F, 0F);
        rightleg9 = new ModelRenderer(this, 50, 0);
        rightleg9.addBox(-1F, 0F, -2F, 2, 5, 2);
        rightleg9.setPos(-10F, 12F, 0F);
        rightleg9.setTexSize(64, 32);
        rightleg9.mirror = true;
        setRotation(rightleg9, -1.22173F, 0F, 0F);
        leftleg9 = new ModelRenderer(this, 50, 0);
        leftleg9.addBox(-1F, 0F, -2F, 2, 5, 2);
        leftleg9.setPos(10F, 12F, 0F);
        leftleg9.setTexSize(64, 32);
        leftleg9.mirror = true;
        setRotation(leftleg9, -1.22173F, 0F, 0F);
        rightarm2 = new ModelRenderer(this, 40, 16);
        rightarm2.addBox(-11F, -4F, -2F, 11, 4, 4);
        rightarm2.setPos(-8F, 2F, 0F);
        rightarm2.setTexSize(64, 32);
        rightarm2.mirror = true;
        setRotation(rightarm2, 0F, 0F, 0F);
        leftarm2 = new ModelRenderer(this, 40, 16);
        leftarm2.addBox(0F, -4F, -2F, 11, 4, 4);
        leftarm2.setPos(8F, 2F, 0F);
        leftarm2.setTexSize(64, 32);
        leftarm2.mirror = true;
        setRotation(leftarm2, 0F, 0F, 0F);
        rightarm3 = new ModelRenderer(this, 22, 12);
        rightarm3.addBox(-11F, -2F, -2F, 4, 12, 4);
        rightarm3.setPos(-8F, 2F, 0F);
        rightarm3.setTexSize(64, 32);
        rightarm3.mirror = true;
        setRotation(rightarm3, 0F, 0F, 0F);
        leftarm3 = new ModelRenderer(this, 22, 12);
        leftarm3.addBox(7F, -2F, -2F, 4, 12, 4);
        leftarm3.setPos(8F, 2F, 0F);
        leftarm3.setTexSize(64, 32);
        leftarm3.mirror = true;
        setRotation(leftarm3, 0F, 0F, 0F);
        rightarm4 = new ModelRenderer(this, 40, 20);
        rightarm4.addBox(-12F, 9F, -3F, 6, 6, 6);
        rightarm4.setPos(-8F, 2F, 0F);
        rightarm4.setTexSize(64, 32);
        rightarm4.mirror = true;
        setRotation(rightarm4, 0F, 0F, 0F);
        leftarm4 = new ModelRenderer(this, 40, 20);
        leftarm4.addBox(6F, 9F, -3F, 6, 6, 6);
        leftarm4.setPos(8F, 2F, 0F);
        leftarm4.setTexSize(64, 32);
        leftarm4.mirror = true;
        setRotation(leftarm4, 0F, 0F, 0F);
        rightarm5 = new ModelRenderer(this, 40, 20);
        rightarm5.addBox(-12F, -5F, -3F, 6, 6, 6);
        rightarm5.setPos(-8F, 2F, 0F);
        rightarm5.setTexSize(64, 32);
        rightarm5.mirror = true;
        setRotation(rightarm5, 0F, 0F, 0F);
        leftarm5 = new ModelRenderer(this, 40, 20);
        leftarm5.addBox(6F, -5F, -3F, 6, 6, 6);
        leftarm5.setPos(8F, 2F, 0F);
        leftarm5.setTexSize(64, 32);
        leftarm5.mirror = true;
        setRotation(leftarm5, 0F, 0F, 0F);
    }

    @Override
    public Iterable<ModelRenderer> parts() {
        return ImmutableList.of(rightarm1, leftarm1, rightleg1, leftleg1, body1, body2, body3, body4, body5, body6, body7, body8, rightleg2, leftleg2, leftleg3, rightleg3, rightleg4, leftleg4, rightleg5, leftleg5, leftleg6, leftleg10, rightleg10, rightleg7, rightleg8, leftleg8, rightleg9, leftleg9, rightarm2, leftarm2, rightarm3, leftarm3, rightarm4, leftarm4, rightarm5, leftarm5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z)
    {
        model.xRot = x;
        model.yRot = y;
        model.zRot = z;
    }

    @Override
	public void setupAnim(T entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
        this.leftleg1.xRot = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount + 1.570796F;
        this.leftleg2.xRot = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount + -0.3490659F;
        this.leftleg3.xRot = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount + -1.22173F;
        this.leftleg4.xRot = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount + 1.22173F;
        this.leftleg5.xRot = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount + 1.570796F;
        this.leftleg6.xRot = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount + 1.570796F;
        this.leftleg8.xRot = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount + -0.3490659F;
        this.leftleg9.xRot = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount + -1.22173F;
        this.leftleg10.xRot = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount + 1.570796F;

        this.rightleg1.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount + 1.570796F;
        this.rightleg2.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount + -0.3490659F;
        this.rightleg3.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount + -1.22173F;
        this.rightleg4.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount + 1.22173F;
        this.rightleg5.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount + 1.570796F;
        this.rightleg7.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount + 1.570796F;
        this.rightleg8.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount + -0.3490659F;
        this.rightleg9.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount + -1.22173F;
        this.rightleg10.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount + 1.570796F;

        this.rightarm1.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F;
        this.rightarm2.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F;
        this.rightarm3.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F;
        this.rightarm4.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F;
        this.rightarm5.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F;

        this.leftarm1.xRot = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F;
        this.leftarm2.xRot = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F;
        this.leftarm3.xRot = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F;
        this.leftarm4.xRot = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F;
        this.leftarm5.xRot = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F;
    }

}