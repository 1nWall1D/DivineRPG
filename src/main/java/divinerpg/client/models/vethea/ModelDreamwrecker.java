package divinerpg.client.models.vethea;

import com.google.common.collect.ImmutableList;

import net.minecraft.client.renderer.entity.model.SegmentedModel;
import net.minecraft.client.renderer.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.math.*;

public class ModelDreamwrecker<T extends Entity> extends SegmentedModel<T> 
{
    //fields
    ModelRenderer head;
    ModelRenderer bodyt1;
    ModelRenderer rightarmb;
    ModelRenderer leftarmb;
    ModelRenderer rightlegb;
    ModelRenderer leftlegb;
    ModelRenderer bodyt2;
    ModelRenderer rightlegt;
    ModelRenderer leftlegt;
    ModelRenderer body1;
    ModelRenderer body2;
    ModelRenderer bodyb1;
    ModelRenderer bodyb2;
    ModelRenderer rightarmt;
    ModelRenderer leftarmt;
    ModelRenderer rightarmspike1;
    ModelRenderer leftarmspike1;
    ModelRenderer body3;
    ModelRenderer seg1;
    ModelRenderer seg2;
    ModelRenderer seg3;
    ModelRenderer seg4;
    ModelRenderer seg5;
    ModelRenderer seg6;
    ModelRenderer seg7;
    ModelRenderer seg8;
    ModelRenderer seg9;
    ModelRenderer seg10;
    ModelRenderer seg11;
    ModelRenderer seg12;
    ModelRenderer seg13;
    ModelRenderer leftarmm;
    ModelRenderer rightarmm;
    ModelRenderer leftarmspike2;
    ModelRenderer rightarmspike2;
    ModelRenderer leftarmspike3;
    ModelRenderer rightarmspike3;
    ModelRenderer rightarmspike4;
    ModelRenderer leftarmspike4;
    ModelRenderer seg14;
    ModelRenderer seg15;
    ModelRenderer seg16;
    ModelRenderer seg17;
    ModelRenderer seg18;

    public ModelDreamwrecker()
    {
        texWidth = 64;
        texHeight = 32;

        head = new ModelRenderer(this, 0, 0);
        head.addBox(-4F, -8F, -4F, 8, 8, 8);
        head.setPos(0F, -41F, -3F);
        head.setTexSize(64, 32);
        head.mirror = true;
        setRotation(head, 0F, 0F, 0F);
        bodyt1 = new ModelRenderer(this, 16, 18);
        bodyt1.addBox(-4F, 0F, -2F, 8, 6, 4);
        bodyt1.setPos(4F, -30F, 0F);
        bodyt1.setTexSize(64, 32);
        bodyt1.mirror = true;
        setRotation(bodyt1, 0F, 0F, 0F);
        rightarmb = new ModelRenderer(this, 48, 8);
        rightarmb.addBox(-3F, 18F, -2F, 4, 4, 4);
        rightarmb.setPos(-9F, -26F, 0F);
        rightarmb.setTexSize(64, 32);
        rightarmb.mirror = true;
        setRotation(rightarmb, 0F, 0F, 0F);
        leftarmb = new ModelRenderer(this, 48, 8);
        leftarmb.addBox(-1F, 18F, -2F, 4, 4, 4);
        leftarmb.setPos(9F, -26F, 0F);
        leftarmb.setTexSize(64, 32);
        leftarmb.mirror = true;
        setRotation(leftarmb, 0F, 0F, 0F);
        rightlegb = new ModelRenderer(this, 0, 17);
        rightlegb.addBox(-2F, 8F, -2F, 4, 10, 4);
        rightlegb.setPos(-3F, 6F, 0F);
        rightlegb.setTexSize(64, 32);
        rightlegb.mirror = true;
        setRotation(rightlegb, 0F, 0F, 0F);
        leftlegb = new ModelRenderer(this, 0, 17);
        leftlegb.addBox(-2F, 8F, -2F, 4, 10, 4);
        leftlegb.setPos(3F, 6F, 0F);
        leftlegb.setTexSize(64, 32);
        leftlegb.mirror = true;
        setRotation(leftlegb, 0F, 0F, 0F);
        bodyt2 = new ModelRenderer(this, 16, 18);
        bodyt2.addBox(-4F, 0F, -2F, 8, 6, 4);
        bodyt2.setPos(-4F, -30F, 0F);
        bodyt2.setTexSize(64, 32);
        bodyt2.mirror = true;
        setRotation(bodyt2, 0F, 0F, 0F);
        rightlegt = new ModelRenderer(this, 0, 16);
        rightlegt.addBox(-2F, 0F, -2F, 4, 8, 4);
        rightlegt.setPos(-3F, 6F, 0F);
        rightlegt.setTexSize(64, 32);
        rightlegt.mirror = true;
        setRotation(rightlegt, 0F, 0F, 0F);
        leftlegt = new ModelRenderer(this, 0, 16);
        leftlegt.addBox(-2F, 0F, -2F, 4, 8, 4);
        leftlegt.setPos(3F, 6F, 0F);
        leftlegt.setTexSize(64, 32);
        leftlegt.mirror = true;
        setRotation(leftlegt, 0F, 0F, 0F);
        body1 = new ModelRenderer(this, 16, 18);
        body1.addBox(-4F, 0F, -2F, 6, 8, 4);
        body1.setPos(1F, -8F, 0F);
        body1.setTexSize(64, 32);
        body1.mirror = true;
        setRotation(body1, 0F, 0F, 0F);
        body2 = new ModelRenderer(this, 16, 18);
        body2.addBox(-4F, 0F, -2F, 6, 8, 4);
        body2.setPos(1F, -16F, 0F);
        body2.setTexSize(64, 32);
        body2.mirror = true;
        setRotation(body2, 0F, 0F, 0F);
        bodyb1 = new ModelRenderer(this, 16, 18);
        bodyb1.addBox(-4F, 0F, -2F, 7, 6, 4);
        bodyb1.setPos(4F, 0F, 0F);
        bodyb1.setTexSize(64, 32);
        bodyb1.mirror = true;
        setRotation(bodyb1, 0F, 0F, 0F);
        bodyb2 = new ModelRenderer(this, 16, 18);
        bodyb2.addBox(-4F, 0F, -2F, 7, 6, 4);
        bodyb2.setPos(-3F, 0F, 0F);
        bodyb2.setTexSize(64, 32);
        bodyb2.mirror = true;
        setRotation(bodyb2, 0F, 0F, 0F);
        rightarmt = new ModelRenderer(this, 40, 16);
        rightarmt.addBox(-3F, -2F, -2F, 4, 12, 4);
        rightarmt.setPos(-9F, -26F, 0F);
        rightarmt.setTexSize(64, 32);
        rightarmt.mirror = true;
        setRotation(rightarmt, 0F, 0F, 0F);
        leftarmt = new ModelRenderer(this, 40, 16);
        leftarmt.addBox(-1F, -2F, -2F, 4, 12, 4);
        leftarmt.setPos(9F, -26F, 0F);
        leftarmt.setTexSize(64, 32);
        leftarmt.mirror = true;
        setRotation(leftarmt, 0F, 0F, 0F);
        rightarmspike1 = new ModelRenderer(this, 0, 17);
        rightarmspike1.addBox(1F, 21F, 0F, 1, 1, 11);
        rightarmspike1.setPos(-9F, -26F, 0F);
        rightarmspike1.setTexSize(64, 32);
        rightarmspike1.mirror = true;
        setRotation(rightarmspike1, 0F, 0F, 0F);
        leftarmspike1 = new ModelRenderer(this, 0, 17);
        leftarmspike1.addBox(3F, 21F, 0F, 1, 1, 11);
        leftarmspike1.setPos(9F, -26F, 0F);
        leftarmspike1.setTexSize(64, 32);
        leftarmspike1.mirror = true;
        setRotation(leftarmspike1, 0F, 0F, 0F);
        body3 = new ModelRenderer(this, 16, 18);
        body3.addBox(-4F, 0F, -2F, 6, 8, 4);
        body3.setPos(1F, -24F, 0F);
        body3.setTexSize(64, 32);
        body3.mirror = true;
        setRotation(body3, 0F, 0F, 0F);
        seg1 = new ModelRenderer(this, 16, 18);
        seg1.addBox(-4F, -8F, 2F, 6, 5, 4);
        seg1.setPos(1F, -20F, 1F);
        seg1.setTexSize(64, 32);
        seg1.mirror = true;
        setRotation(seg1, 0F, 0F, 0F);
        seg2 = new ModelRenderer(this, 16, 18);
        seg2.addBox(-4F, -8F, 1F, 6, 5, 4);
        seg2.setPos(1F, -35F, 0F);
        seg2.setTexSize(64, 32);
        seg2.mirror = true;
        setRotation(seg2, 0.5235988F, 0F, 0F);
        seg3 = new ModelRenderer(this, 16, 18);
        seg3.addBox(-4F, -3F, 2F, 6, 5, 4);
        seg3.setPos(1F, -35F, 0F);
        seg3.setTexSize(64, 32);
        seg3.mirror = true;
        setRotation(seg3, 0.3490659F, 0F, 0F);
        seg4 = new ModelRenderer(this, 16, 18);
        seg4.addBox(-4F, 2F, 2F, 6, 5, 4);
        seg4.setPos(1F, -35F, 0F);
        seg4.setTexSize(64, 32);
        seg4.mirror = true;
        setRotation(seg4, 0.1745329F, 0F, 0F);
        seg5 = new ModelRenderer(this, 16, 18);
        seg5.addBox(-4F, -8F, 1F, 6, 5, 4);
        seg5.setPos(1F, -15F, 1F);
        seg5.setTexSize(64, 32);
        seg5.mirror = true;
        setRotation(seg5, -0.1745329F, 0F, 0F);
        seg6 = new ModelRenderer(this, 16, 18);
        seg6.addBox(-4F, -3F, 1F, 6, 5, 4);
        seg6.setPos(1F, -15F, 1F);
        seg6.setTexSize(64, 32);
        seg6.mirror = true;
        setRotation(seg6, -0.3490659F, 0F, 0F);
        seg7 = new ModelRenderer(this, 42, 2);
        seg7.addBox(-5F, -9F, 6F, 3, 2, 4);
        seg7.setPos(9F, -33F, 0F);
        seg7.setTexSize(64, 32);
        seg7.mirror = true;
        setRotation(seg7, 1.047198F, 0F, 0F);
        seg8 = new ModelRenderer(this, 16, 18);
        seg8.addBox(-4F, 2F, 1F, 6, 1, 4);
        seg8.setPos(1F, -15F, 1F);
        seg8.setTexSize(64, 32);
        seg8.mirror = true;
        setRotation(seg8, -0.5235988F, 0F, 0F);
        seg9 = new ModelRenderer(this, 36, 0);
        seg9.addBox(-5F, 2F, 0F, 8, 2, 6);
        seg9.setPos(1F, -15F, 1F);
        seg9.setTexSize(64, 32);
        seg9.mirror = true;
        setRotation(seg9, -0.6981317F, 0F, 0F);
        seg10 = new ModelRenderer(this, 36, 0);
        seg10.addBox(-5F, -4F, 0F, 8, 2, 6);
        seg10.setPos(1F, -15F, 1F);
        seg10.setTexSize(64, 32);
        seg10.mirror = true;
        setRotation(seg10, -0.3490659F, 0F, 0F);
        seg11 = new ModelRenderer(this, 36, 0);
        seg11.addBox(-5F, -9F, 0F, 8, 2, 6);
        seg11.setPos(1F, -15F, 1F);
        seg11.setTexSize(64, 32);
        seg11.mirror = true;
        setRotation(seg11, -0.1745329F, 0F, 0F);
        seg12 = new ModelRenderer(this, 36, 0);
        seg12.addBox(-5F, -9F, 0F, 8, 2, 6);
        seg12.setPos(1F, -20F, 2F);
        seg12.setTexSize(64, 32);
        seg12.mirror = true;
        setRotation(seg12, 0F, 0F, 0F);
        seg13 = new ModelRenderer(this, 36, 0);
        seg13.addBox(-5F, -9F, 0F, 8, 2, 6);
        seg13.setPos(1F, -26F, 3F);
        seg13.setTexSize(64, 32);
        seg13.mirror = true;
        setRotation(seg13, 0.1745329F, 0F, 0F);
        leftarmm = new ModelRenderer(this, 40, 20);
        leftarmm.addBox(-1F, 10F, -2F, 4, 8, 4);
        leftarmm.setPos(9F, -26F, 0F);
        leftarmm.setTexSize(64, 32);
        leftarmm.mirror = true;
        setRotation(leftarmm, 0F, 0F, 0F);
        rightarmm = new ModelRenderer(this, 40, 20);
        rightarmm.addBox(-3F, 10F, -2F, 4, 8, 4);
        rightarmm.setPos(-9F, -26F, 0F);
        rightarmm.setTexSize(64, 32);
        rightarmm.mirror = true;
        setRotation(rightarmm, 0F, 0F, 0F);
        leftarmspike2 = new ModelRenderer(this, 0, 17);
        leftarmspike2.addBox(3F, 21F, -11F, 1, 1, 11);
        leftarmspike2.setPos(9F, -26F, 0F);
        leftarmspike2.setTexSize(64, 32);
        leftarmspike2.mirror = true;
        setRotation(leftarmspike2, 0F, 0F, 0F);
        rightarmspike2 = new ModelRenderer(this, 0, 17);
        rightarmspike2.addBox(1F, 21F, -11F, 1, 1, 11);
        rightarmspike2.setPos(-9F, -26F, 0F);
        rightarmspike2.setTexSize(64, 32);
        rightarmspike2.mirror = true;
        setRotation(rightarmspike2, 0F, 0F, 0F);
        leftarmspike3 = new ModelRenderer(this, 0, 17);
        leftarmspike3.addBox(-2F, 21F, 0F, 1, 1, 11);
        leftarmspike3.setPos(9F, -26F, 0F);
        leftarmspike3.setTexSize(64, 32);
        leftarmspike3.mirror = true;
        setRotation(leftarmspike3, 0F, 0F, 0F);
        rightarmspike3 = new ModelRenderer(this, 0, 17);
        rightarmspike3.addBox(-4F, 21F, 0F, 1, 1, 11);
        rightarmspike3.setPos(-9F, -26F, 0F);
        rightarmspike3.setTexSize(64, 32);
        rightarmspike3.mirror = true;
        setRotation(rightarmspike3, 0F, 0F, 0F);
        rightarmspike4 = new ModelRenderer(this, 0, 17);
        rightarmspike4.addBox(-4F, 21F, -11F, 1, 1, 11);
        rightarmspike4.setPos(-9F, -26F, 0F);
        rightarmspike4.setTexSize(64, 32);
        rightarmspike4.mirror = true;
        setRotation(rightarmspike4, 0F, 0F, 0F);
        leftarmspike4 = new ModelRenderer(this, 0, 17);
        leftarmspike4.addBox(-2F, 21F, -11F, 1, 1, 11);
        leftarmspike4.setPos(9F, -26F, 0F);
        leftarmspike4.setTexSize(64, 32);
        leftarmspike4.mirror = true;
        setRotation(leftarmspike4, 0F, 0F, 0F);
        seg14 = new ModelRenderer(this, 36, 0);
        seg14.addBox(-5F, 0F, 0F, 8, 2, 6);
        seg14.setPos(1F, -15F, 1F);
        seg14.setTexSize(64, 32);
        seg14.mirror = true;
        setRotation(seg14, -0.5235988F, 0F, 0F);
        seg15 = new ModelRenderer(this, 36, 0);
        seg15.addBox(-5F, -9F, 0F, 8, 2, 6);
        seg15.setPos(1F, -31F, 2F);
        seg15.setTexSize(64, 32);
        seg15.mirror = true;
        setRotation(seg15, 0.3490659F, 0F, 0F);
        seg16 = new ModelRenderer(this, 42, 2);
        seg16.addBox(-5F, -9F, 6F, 3, 2, 4);
        seg16.setPos(-2F, -33F, 0F);
        seg16.setTexSize(64, 32);
        seg16.mirror = true;
        setRotation(seg16, 1.047198F, 0F, 0F);
        seg17 = new ModelRenderer(this, 36, 0);
        seg17.addBox(-5F, -9F, 0F, 2, 2, 6);
        seg17.setPos(9F, -33F, 0F);
        seg17.setTexSize(64, 32);
        seg17.mirror = true;
        setRotation(seg17, 1.047198F, 0F, 0F);
        seg18 = new ModelRenderer(this, 36, 0);
        seg18.addBox(-5F, -9F, 0F, 2, 2, 6);
        seg18.setPos(-1F, -33F, 0F);
        seg18.setTexSize(64, 32);
        seg18.mirror = true;
        setRotation(seg18, 1.047198F, 0F, 0F);
    }

    @Override
    public Iterable<ModelRenderer> parts() {
        return ImmutableList.of(head, bodyt1, rightarmb, leftarmb, rightlegb, leftlegb, bodyt2, rightlegt, leftlegt, body1, body2, bodyb1, bodyb2, rightarmt, leftarmt, rightarmspike1, leftarmspike1, seg1, seg2, seg3, seg4, seg5, seg6, seg7, seg8, seg9, seg10, seg11, seg12, seg13, leftarmm, rightarmm, leftarmspike2, rightarmspike2, leftarmspike3, rightarmspike3, rightarmspike4, leftarmspike4, seg14, seg15, seg16, seg17, seg18);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z)
    {
        model.xRot = x;
        model.yRot = y;
        model.zRot = z;
    }

    @Override
	public void setupAnim(T entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
        this.leftlegt.xRot = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount;
        this.leftlegb.xRot = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount;

        this.rightlegt.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount;
        this.rightlegb.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount;

        this.rightarmt.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F;
        this.rightarmm.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F;
        this.rightarmb.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F;
        this.rightarmspike1.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F;
        this.rightarmspike2.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F;
        this.rightarmspike3.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F;
        this.rightarmspike4.xRot = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F;

        this.leftarmt.xRot = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F;
        this.leftarmm.xRot = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F;
        this.leftarmb.xRot = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F;
        this.leftarmspike1.xRot = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F;
        this.leftarmspike2.xRot = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F;
        this.leftarmspike3.xRot = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F;
        this.leftarmspike4.xRot = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F;
    }

}